/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings/route'
import { Route as PatientsRouteImport } from './routes/patients/route'
import { Route as DoctorOnboardingRouteImport } from './routes/doctor-onboarding/route'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as AppointmentsRouteImport } from './routes/appointments/route'
import { Route as IndexImport } from './routes/index'
import { Route as AppointmentRoomIndexImport } from './routes/appointment-room/index'
import { Route as PatientPatientIdImport } from './routes/patient/$patientId'
import { Route as AuthVerifyEmailImport } from './routes/auth/verify-email'
import { Route as AuthResetPasswordImport } from './routes/auth/reset-password'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthForgotPasswordImport } from './routes/auth/forgot-password'
import { Route as AuthCreateAccountImport } from './routes/auth/create-account'

// Create/Update Routes

const SettingsRouteRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const PatientsRouteRoute = PatientsRouteImport.update({
  id: '/patients',
  path: '/patients',
  getParentRoute: () => rootRoute,
} as any)

const DoctorOnboardingRouteRoute = DoctorOnboardingRouteImport.update({
  id: '/doctor-onboarding',
  path: '/doctor-onboarding',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppointmentsRouteRoute = AppointmentsRouteImport.update({
  id: '/appointments',
  path: '/appointments',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppointmentRoomIndexRoute = AppointmentRoomIndexImport.update({
  id: '/appointment-room/',
  path: '/appointment-room/',
  getParentRoute: () => rootRoute,
} as any)

const PatientPatientIdRoute = PatientPatientIdImport.update({
  id: '/patient/$patientId',
  path: '/patient/$patientId',
  getParentRoute: () => rootRoute,
} as any)

const AuthVerifyEmailRoute = AuthVerifyEmailImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthCreateAccountRoute = AuthCreateAccountImport.update({
  id: '/create-account',
  path: '/create-account',
  getParentRoute: () => AuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/appointments': {
      id: '/appointments'
      path: '/appointments'
      fullPath: '/appointments'
      preLoaderRoute: typeof AppointmentsRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/doctor-onboarding': {
      id: '/doctor-onboarding'
      path: '/doctor-onboarding'
      fullPath: '/doctor-onboarding'
      preLoaderRoute: typeof DoctorOnboardingRouteImport
      parentRoute: typeof rootRoute
    }
    '/patients': {
      id: '/patients'
      path: '/patients'
      fullPath: '/patients'
      preLoaderRoute: typeof PatientsRouteImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/create-account': {
      id: '/auth/create-account'
      path: '/create-account'
      fullPath: '/auth/create-account'
      preLoaderRoute: typeof AuthCreateAccountImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/verify-email': {
      id: '/auth/verify-email'
      path: '/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailImport
      parentRoute: typeof AuthRouteImport
    }
    '/patient/$patientId': {
      id: '/patient/$patientId'
      path: '/patient/$patientId'
      fullPath: '/patient/$patientId'
      preLoaderRoute: typeof PatientPatientIdImport
      parentRoute: typeof rootRoute
    }
    '/appointment-room/': {
      id: '/appointment-room/'
      path: '/appointment-room'
      fullPath: '/appointment-room'
      preLoaderRoute: typeof AppointmentRoomIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthCreateAccountRoute: typeof AuthCreateAccountRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthVerifyEmailRoute: typeof AuthVerifyEmailRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthCreateAccountRoute: AuthCreateAccountRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthVerifyEmailRoute: AuthVerifyEmailRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/appointments': typeof AppointmentsRouteRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRoute
  '/doctor-onboarding': typeof DoctorOnboardingRouteRoute
  '/patients': typeof PatientsRouteRoute
  '/settings': typeof SettingsRouteRoute
  '/auth/create-account': typeof AuthCreateAccountRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/patient/$patientId': typeof PatientPatientIdRoute
  '/appointment-room': typeof AppointmentRoomIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/appointments': typeof AppointmentsRouteRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRoute
  '/doctor-onboarding': typeof DoctorOnboardingRouteRoute
  '/patients': typeof PatientsRouteRoute
  '/settings': typeof SettingsRouteRoute
  '/auth/create-account': typeof AuthCreateAccountRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/patient/$patientId': typeof PatientPatientIdRoute
  '/appointment-room': typeof AppointmentRoomIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/appointments': typeof AppointmentsRouteRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRoute
  '/doctor-onboarding': typeof DoctorOnboardingRouteRoute
  '/patients': typeof PatientsRouteRoute
  '/settings': typeof SettingsRouteRoute
  '/auth/create-account': typeof AuthCreateAccountRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/patient/$patientId': typeof PatientPatientIdRoute
  '/appointment-room/': typeof AppointmentRoomIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/appointments'
    | '/auth'
    | '/dashboard'
    | '/doctor-onboarding'
    | '/patients'
    | '/settings'
    | '/auth/create-account'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/verify-email'
    | '/patient/$patientId'
    | '/appointment-room'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/appointments'
    | '/auth'
    | '/dashboard'
    | '/doctor-onboarding'
    | '/patients'
    | '/settings'
    | '/auth/create-account'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/verify-email'
    | '/patient/$patientId'
    | '/appointment-room'
  id:
    | '__root__'
    | '/'
    | '/appointments'
    | '/auth'
    | '/dashboard'
    | '/doctor-onboarding'
    | '/patients'
    | '/settings'
    | '/auth/create-account'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/verify-email'
    | '/patient/$patientId'
    | '/appointment-room/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppointmentsRouteRoute: typeof AppointmentsRouteRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRoute
  DoctorOnboardingRouteRoute: typeof DoctorOnboardingRouteRoute
  PatientsRouteRoute: typeof PatientsRouteRoute
  SettingsRouteRoute: typeof SettingsRouteRoute
  PatientPatientIdRoute: typeof PatientPatientIdRoute
  AppointmentRoomIndexRoute: typeof AppointmentRoomIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppointmentsRouteRoute: AppointmentsRouteRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRoute,
  DoctorOnboardingRouteRoute: DoctorOnboardingRouteRoute,
  PatientsRouteRoute: PatientsRouteRoute,
  SettingsRouteRoute: SettingsRouteRoute,
  PatientPatientIdRoute: PatientPatientIdRoute,
  AppointmentRoomIndexRoute: AppointmentRoomIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/appointments",
        "/auth",
        "/dashboard",
        "/doctor-onboarding",
        "/patients",
        "/settings",
        "/patient/$patientId",
        "/appointment-room/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/appointments": {
      "filePath": "appointments/route.tsx"
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/create-account",
        "/auth/forgot-password",
        "/auth/login",
        "/auth/reset-password",
        "/auth/verify-email"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx"
    },
    "/doctor-onboarding": {
      "filePath": "doctor-onboarding/route.tsx"
    },
    "/patients": {
      "filePath": "patients/route.tsx"
    },
    "/settings": {
      "filePath": "settings/route.tsx"
    },
    "/auth/create-account": {
      "filePath": "auth/create-account.tsx",
      "parent": "/auth"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx",
      "parent": "/auth"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx",
      "parent": "/auth"
    },
    "/auth/reset-password": {
      "filePath": "auth/reset-password.tsx",
      "parent": "/auth"
    },
    "/auth/verify-email": {
      "filePath": "auth/verify-email.tsx",
      "parent": "/auth"
    },
    "/patient/$patientId": {
      "filePath": "patient/$patientId.tsx"
    },
    "/appointment-room/": {
      "filePath": "appointment-room/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
